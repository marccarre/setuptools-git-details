#!/usr/bin/env bash

# Description:
#   Install the software development tools required to develop this project.

set -euo pipefail

# Drive the preferred Python version via an environment variable in this setup
# script. Even `pyenv` is used to install Python and manage different versions,
# do NOT use a *checked-in* .python-version file, as it (currently) prevents
# building with different Python versions with `uv` in CI.
# A local .python-version file can be used, and will be generated by
# `pyenv local` in this script, but the version should be driven from this
# script's PYTHON_VERSION.
PYTHON_VERSION="3.12.6"

function set_up_pyenv() {
    eval "$(pyenv init -)"
    # shellcheck disable=SC2016
    {
        echo 'export PYENV_ROOT="$HOME/.pyenv"'
        echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"'
        echo 'eval "$(pyenv init -)"'
    } >> ~/.profile
    echo "IMPORTANT: Please ensure you source ~/.profile from your shell's RC file for pyenv to work next time."
}

function set_up_macos() {
    command -v brew >/dev/null 2>&1 || /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    command -v python >/dev/null 2>&1 || brew install python@3.12
    command -v pyenv >/dev/null 2>&1 || {
        brew install pyenv
        set_up_pyenv
    }
    command -v uv >/dev/null 2>&1 || brew install uv
    command -v shellcheck >/dev/null 2>&1 || brew install shellcheck
    command -v pre-commit >/dev/null 2>&1 || brew install pre-commit
}

function set_up_linux() {
    command -v python >/dev/null 2>&1 || sudo apt-get install -y python3 python3-pip python3-venv
    command -v pyenv >/dev/null 2>&1 || {
        curl https://pyenv.run | bash
        set_up_pyenv
    }
    command -v uv >/dev/null 2>&1 || {
        curl -LsSf https://astral.sh/uv/install.sh | sh
        export PATH="${PATH}:${HOME}/.cargo/bin"
        # shellcheck disable=SC2016
        echo 'export PATH="${PATH}:${HOME}/.cargo/bin"' >> ~/.profile
    }
    command -v shellcheck >/dev/null 2>&1 || sudo apt-get install -y shellcheck
    command -v pre-commit >/dev/null 2>&1 || pip install pre-commit
}

function set_up() {
    if [[ "$(uname -s)" == "Darwin" ]] ; then
        set_up_macos
    else
        set_up_linux
    fi
}

function main() {
    set_up
    pyenv install -s "${PYTHON_VERSION}"
    pyenv local "${PYTHON_VERSION}"
    uv venv
    uv sync
    pre-commit install
    pre-commit install --hook-type commit-msg
    pre-commit run --all-files
}

main
