name: Continuous Integration
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          export PATH="${PATH}:${HOME}/.cargo/bin"
          echo "${HOME}/.cargo/bin" >> "${GITHUB_PATH}"
          uv --version
      - name: Set up uv's Python version
        run: |
          uv python install "$(python --version | cut -d\  -f 2)"
      - name: Load dependencies if venv cache hit
        id: load-deps
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/uv.lock') }}
      - name: Install dependencies if venv cache miss
        if: steps.load-deps.outputs.cache-hit != 'true'
        run: uv sync
      - name: Print Python version
        run: |
          echo "Calling python directly:"
          python --version
          python -c "import sys; print(sys.version)"
          echo
          echo "Calling python via uv:"
          uv run python --version
          uv run python -c "import sys; print(sys.version)"
      - name: Lint
        run: |
          pip install pre-commit
          pre-commit install
          pre-commit run --all-files
      - name: Test
        run: uv run pytest
        env:
          SETUPTOOLS_GIT_DETAILS_DEBUG: 1
